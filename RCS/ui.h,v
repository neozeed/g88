head     1.7;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.7
date     90.08.19.21.18.28;  author robertb;  state Exp;
branches ;
next     1.6;

1.6
date     89.11.17.08.10.06;  author davidl;  state Exp;
branches ;
next     1.5;

1.5
date     89.11.16.13.29.54;  author davidl;  state Exp;
branches ;
next     1.4;

1.4
date     89.10.19.13.30.30;  author davidl;  state Exp;
branches ;
next     1.3;

1.3
date     89.09.15.10.41.13;  author davidl;  state Exp;
branches ;
next     1.2;

1.2
date     89.09.11.10.41.19;  author davidl;  state Exp;
branches ;
next     1.1;

1.1
date     89.08.04.10.19.42;  author davidl;  state Exp;
branches ;
next     ;


desc
@Header for ui.c.
@


1.7
log
@Deleted large useless comment.
@
text
@/*
  
   $Header: /home/vlsi/u2/cs568/g88/RCS/ui.h,v 1.6 89/11/17 08:10:06 davidl Exp Locker: robertb $
   $Locker: robertb $
 
  Tektronix programming extensions to GDB, the GNU debugger.
  Copyright (C) 1989 Free Software Foundation, Inc.

  This file is part of GDB.  */



#ifndef ui_h
#define ui_h

typedef struct {
    char    *uiv_name;
    int     (*uiv_initialize)();
    int     (*uiv_newprompt)();
    int     (*uiv_fprintf)();
    int     (*uiv_fputc)();
    int     (*uiv_puts)();
    int     (*uiv_fputs)();
    char    *(*uiv_gets)();
    char    *(*uiv_fgets)();
    int     (*uiv_fflush)();
    void    (*uiv_help)();
    void    (*uiv_gripe)();
    int     (*uiv_call)();
    int     (*uiv_wait)();
    void    (*uiv_strtSubProc)();
    void    (*uiv_endSubProc)();
    void    (*uiv_edit)();
    void    (*uiv_getClientInfo)();
    void    (*uiv_doButtons)();
    void    (*uiv_byebye)();
    void    (*uiv_badnews)();
    void    (*uiv_procflush)();
    void    (*uiv_tickleMe)();
    int     (*uiv_system)();
    void    (*uiv_button)();
    void    (*uiv_unbutton)();
    int     (*uiv_query)();
    void    (*uiv_startRedirectOut)();
    void    (*uiv_endRedirectOut)();
    void    (*uiv_doneinit)();

} *UIVector, UIVecStruct;

#define ui_initialize      (*(uiVector->uiv_initialize))
#define ui_newprompt       (*(uiVector->uiv_newprompt))
#define ui_fprintf         (*(uiVector->uiv_fprintf))
#define ui_putchar(ch)     (*(uiVector->uiv_fputc))(ch,stdout)
#define ui_putc(ch,f)      (*(uiVector->uiv_fputc))(ch,f)
#define ui_puts            (*(uiVector->uiv_puts))
#define ui_fputs           (*(uiVector->uiv_fputs))
#define ui_gets            (*(uiVector->uiv_gets))
#define ui_fgets           (*(uiVector->uiv_fgets))
#define ui_fflush          (*(uiVector->uiv_fflush))
#define ui_help            (*(uiVector->uiv_help))
#define ui_gripe           (*(uiVector->uiv_gripe))
#define ui_call            (*(uiVector->uiv_call))
#define ui_wait            (*(uiVector->uiv_wait))
#define ui_strtSubProc     (*(uiVector->uiv_strtSubProc))
#define ui_endSubProc      (*(uiVector->uiv_endSubProc))
#define ui_edit            (*(uiVector->uiv_edit))
#define ui_getClientInfo   (*(uiVector->uiv_getClientInfo))
#define ui_doButtons       (*(uiVector->uiv_doButtons))
#define ui_byebye          (*(uiVector->uiv_byebye))
#define ui_badnews         (*(uiVector->uiv_badnews))
#define ui_procflush       (*(uiVector->uiv_procflush))
#define ui_tickleMe        (*(uiVector->uiv_tickleMe))
#define ui_system          (*(uiVector->uiv_system))
#define ui_button          (*(uiVector->uiv_button))
#define ui_unbutton        (*(uiVector->uiv_unbutton))
#define ui_query           (*(uiVector->uiv_query))
#define ui_startRedirectOut (*(uiVector->uiv_startRedirectOut))
#define ui_endRedirectOut  (*(uiVector->uiv_endRedirectOut))
#define ui_doneinit        (*(uiVector->uiv_doneinit))

#ifndef	ui_c
UIVector    uiVector;
#endif	/* ui_c */

initUserInterface (/* choice, argc, argv */);
#endif	/* ui_h */
@


1.6
log
@Added Tek header information.
@
text
@d2 6
a7 10
 *
 * $Header: ui.h,v 1.5 89/11/16 13:29:54 davidl Exp $
 * $Locker: davidl $
 *
 *
 *
 * 
 */
/* Tektronix programming extensions to GDB, the GNU debugger.
   Copyright (C) 1989 Free Software Foundation, Inc.
d9 1
a9 59

This file is part of GDB.

GDB is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 1, or (at your option)
any later version.

GDB is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GDB; see the file COPYING.  If not, write to
the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */



/* 
 * Changes made by Tektronix are marked by TEK_HACK, TEK_PROG_HACK, 
 * and GHSFORTRAN.
 * Changes made by Data General are marked by DG_HACK.  Compiling without these
 * #defines should be equivalent to compiling vanilla 3.2, more or less.
 *
 * The changes done by Tektronix fit into three catagories:
 *	TEK_HACK -- these were done just to get GDB to work in our environment,
 *		    including work done to support the Green Hills C compiler.
 *	TEK_PROG_HACK -- These were done to extend GDB by adding programming
 *			 support: things like if-elif-else-endif, while, and
 *			 arguments to user defined commands.
 *	GHSFORTRAN -- These changes make (will make) GDB work with the Green
 *		      Hills Fortran compiler.
 *
 *
 * In addition, I/O routines were renamed so that I/O could be directed
 * to/from the X interface if used.  See the files ui.c and ui.h for
 * more information.  Here are the routines renamed:
 *    Old name:			Renamed to:
 *	fprintf			ui_fprintf
 *	printf			ui_fprintf(stdout
 *	putchar			ui_putchar
 *	putc			ui_putc
 *	fputc			ui_putc
 *	fputs			ui_fputs
 *	puts			ui_puts
 *	gets			ui_gets
 *	fgets			ui_fgets
 *	fflush			ui_fflush
 *	system			ui_system
 *	wait			ui_wait
 *	error			ui_badnews(-1
 *	fatal			ui_badnews(1
 *	getc, fgetc		replaced with ui_gets, ui_fgets
 * These changes are not demarcated by ifdef.   
 *
 *					November 16, 1989
 */

@


1.5
log
@Standardized GDB header comment in each file so a script to add Tek-specific
commends (regarding ifdef TEK_HACK, etc.) will work.
@
text
@d3 1
a3 1
 * $Header: ui.h,v 1.4 89/10/19 13:30:30 davidl Exp $
d29 42
@


1.4
log
@Added ui_doneinit.  This allows the debugger to inform the X interface that
it's done with what may be lengthy initialization (such as reading a
large symbol table).  At that time the X interface turns off synchronization.
@
text
@d3 2
a4 2
 * $Header: ui.h,v 1.3 89/09/15 10:41:13 davidl Exp $
 * $Locker:  $
a5 3
 * Modifications from Berkeley 4.1a BSD
 * Copyright (c) 1989, Tektronix Inc.
 * All Rights Reserved
d10 22
@


1.3
log
@Added ui_startRedirectOut and ui_endRedirectOut.
@
text
@d3 1
a3 1
 * $Header: ui.h,v 1.2 89/09/11 10:41:19 davidl Exp $
d47 1
d80 1
@


1.2
log
@Added xx_query.
@
text
@d3 1
a3 1
 * $Header: ui.h,v 1.1 89/08/04 10:19:42 davidl Exp $
d45 2
d77 2
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
 * $Header: $
d44 1
d74 1
@
