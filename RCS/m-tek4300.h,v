head     1.5;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.5
date     89.11.17.08.10.15;  author davidl;  state Exp;
branches ;
next     1.4;

1.4
date     89.11.16.13.29.31;  author davidl;  state Exp;
branches ;
next     1.3;

1.3
date     89.09.21.10.18.54;  author paulg;  state Exp;
branches ;
next     1.2;

1.2
date     89.07.31.16.03.55;  author paulg;  state Exp;
branches ;
next     1.1;

1.1
date     89.07.30.23.19.49;  author paulg;  state Exp;
branches ;
next     ;


desc
@@


1.5
log
@Added Tek header information.
@
text
@/*
   $Header: m-tek4300.h,v 1.4 89/11/16 13:29:31 davidl Exp $
   $Locker: davidl $
 */
/* Tektronix programming extensions to GDB, the GNU debugger.
   Copyright (C) 1989 Free Software Foundation, Inc.


This file is part of GDB.

GDB is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 1, or (at your option)
any later version.

GDB is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GDB; see the file COPYING.  If not, write to
the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */



/* 
 * Changes made by Tektronix are marked by TEK_HACK, TEK_PROG_HACK, 
 * and GHSFORTRAN.
 * Changes made by Data General are marked by DG_HACK.  Compiling without these
 * #defines should be equivalent to compiling vanilla 3.2, more or less.
 *
 * The changes done by Tektronix fit into three catagories:
 *	TEK_HACK -- these were done just to get GDB to work in our environment,
 *		    including work done to support the Green Hills C compiler.
 *	TEK_PROG_HACK -- These were done to extend GDB by adding programming
 *			 support: things like if-elif-else-endif, while, and
 *			 arguments to user defined commands.
 *	GHSFORTRAN -- These changes make (will make) GDB work with the Green
 *		      Hills Fortran compiler.
 *
 *
 * In addition, I/O routines were renamed so that I/O could be directed
 * to/from the X interface if used.  See the files ui.c and ui.h for
 * more information.  Here are the routines renamed:
 *    Old name:			Renamed to:
 *	fprintf			ui_fprintf
 *	printf			ui_fprintf(stdout
 *	putchar			ui_putchar
 *	putc			ui_putc
 *	fputc			ui_putc
 *	fputs			ui_fputs
 *	puts			ui_puts
 *	gets			ui_gets
 *	fgets			ui_fgets
 *	fflush			ui_fflush
 *	system			ui_system
 *	wait			ui_wait
 *	error			ui_badnews(-1
 *	fatal			ui_badnews(1
 *	getc, fgetc		replaced with ui_gets, ui_fgets
 * These changes are not demarcated by ifdef.   
 *
 *					November 16, 1989
 */




#include "m-sun3.h"	/* This is a rough approximation */

#undef NEW_SUN_PTRACE
#undef NEW_SUN_CORE
#undef ATTACH_DETACH
#undef REGISTER_RAW_SIZE
#undef REGISTER_VIRTUAL_TYPE
#undef REGISTER_CONVERT_TO_VIRTUAL
#undef REGISTER_CONVERT_TO_RAW

/* Superset of struct exec */
#define AOUTHDR	struct zexec

/* for remote.c */
#define NO_SIGINTERRUPT

/* struct regs stores PSR as short ... grrr */
#define REGISTER_RAW_SIZE(N) (((unsigned)(N) - FP0_REGNUM) < 8 ? 12 : \
  (N) == PS_REGNUM ? 2 : 4)

#define REGISTER_VIRTUAL_TYPE(N) \
 (((unsigned)(N) - FP0_REGNUM) < 8 ? builtin_type_double : \
    (N) == PS_REGNUM ? builtin_type_short : builtin_type_int)

#define REGISTER_CONVERT_TO_VIRTUAL(REGNUM,FROM,TO)	\
{ if ((REGNUM) >= FP0_REGNUM && (REGNUM) < FPC_REGNUM)	\
    convert_from_68881 ((FROM), (TO));	\
  else	if ((REGNUM) == PS_REGNUM)      \
    {bzero ((TO),2); bcopy ((FROM), ((char *) (TO)) + 2, 2);} \
  else bcopy ((FROM), (TO), 4);}

#define REGISTER_CONVERT_TO_RAW(REGNUM,FROM,TO)	\
{ if ((REGNUM) >= FP0_REGNUM && (REGNUM) < FPC_REGNUM)	\
    convert_to_68881 ((FROM), (TO));	\
  else	if ((REGNUM) == PS_REGNUM)      \
    bcopy(((char *)(FROM))+2, (TO), 2);	\
  else bcopy ((FROM), (TO), 4); }

/* Sun uses a different trap number than UTek; catch both of these */
#undef BREAKPOINT
#define BREAKPOINT {0x4e, 0x4c}
#undef CALL_DUMMY
#define CALL_DUMMY {0xf227e0ff, 0x48e7fffc, 0x426742e7, 0x4eb93232, \
		      0x3232dffc, 0x69696969, 0x4e4c4e71}

/* Change this back to 31 after finding fpcode and fpflags */

#undef NUM_REGS
#define NUM_REGS 29

#ifndef N_TXTADDR
#define N_TXTADDR(hdr) (hdr).a_textaddr
#endif /* no N_TXTADDR */

#ifndef N_DATADDR
#define N_DATADDR(hdr) (hdr).a_dataaddr
#endif /* no N_DATADDR */

#ifndef __GNUC__
/* Compensate for lack of 'vprintf' function */
#define vprintf(format, ap) _doprnt (format, ap, stdout)
#endif
@


1.4
log
@Standardized GDB header comment in each file so a script to add Tek-specific
commends (regarding ifdef TEK_HACK, etc.) will work.
@
text
@d2 1
a2 1
   $Header: m-tek4300.h,v 1.3 89/09/21 10:18:54 paulg Exp $
d24 42
@


1.3
log
@add rcsid stuff
@
text
@d2 2
a3 2
   $Header:  $
   $Locker:  $
d5 22
@


1.2
log
@if not using the gnu stuff, must define vprintf here.
@
text
@d1 5
@


1.1
log
@Initial revision
@
text
@d58 5
@
